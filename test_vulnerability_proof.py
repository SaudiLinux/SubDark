#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import subprocess
import sys
import time

def test_vulnerability_proof_feature():
    """Test the new vulnerability proof with screenshot feature"""
    
    print("Testing SubDark Vulnerability Proof with Screenshot Feature")
    print("=" * 60)
    
    # Create a simple test script that simulates user interaction
    test_script = """
import sys
sys.path.append('.')
from subdark import SubDark

# Create SubDark instance
tool = SubDark()

# Set target first
tool.target = "http://test-vulnerable-site.com"
print(f"Target set to: {tool.target}")

# Test the new vulnerability proof method
tool.real_vulnerability_proof_with_screenshot()
"""
    
    # Write test script to file
    with open('test_vuln_proof.py', 'w', encoding='utf-8') as f:
        f.write(test_script)
    
    try:
        # Run the test
        result = subprocess.run([sys.executable, 'test_vuln_proof.py'], 
                              capture_output=True, text=True, timeout=30)
        
        print("Test completed successfully!")
        print("\nüìã Output:")
        print(result.stdout)
        
        if result.stderr:
            print("\n‚ö†Ô∏è  Errors:")
            print(result.stderr)
            
    except subprocess.TimeoutExpired:
        print("‚è∞ Test timed out after 30 seconds")
    except Exception as e:
        print(f"‚ùå Test failed: {e}")
    finally:
        # Clean up
        import os
        if os.path.exists('test_vuln_proof.py'):
            os.remove('test_vuln_proof.py')

if __name__ == "__main__":
    test_vulnerability_proof_feature()